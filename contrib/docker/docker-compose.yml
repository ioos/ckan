# docker-compose build && docker-compose up -d
# If "docker-compose logs ckan" shows DB not ready, run "docker-compose restart ckan" a few times.
version: "3"

volumes:
  ckan_config:
  pycsw_config:
  ckan_storage:
  pg_data:
  solr_core_data:

services:
  ckan: &ckan_app
    image: ioos/catalog-docker-base:temporal-extent
    container_name: ckan
    ports:
      - "0.0.0.0:${CKAN_PORT}:5000"
    environment:
      # Defaults work with linked containers, change to use own Postgres, SolR, Redis or Datapusher
      - CKAN_SQLALCHEMY_URL=postgresql://ckan:${POSTGRES_PASSWORD}@db/ckan
      - CKAN_DATASTORE_WRITE_URL=postgresql://ckan:${POSTGRES_PASSWORD}@db/datastore
      - CKAN_DATASTORE_READ_URL=postgresql://datastore_ro:${DATASTORE_READONLY_PASSWORD}@db/datastore
      - CKAN_SOLR_URL=http://solr:8983/solr/ckan
      - CKAN_REDIS_URL=redis://redis:6379/1
      - CKAN_DATAPUSHER_URL=http://datapusher:8800
      - CKAN_SITE_URL=${CKAN_SITE_URL}
      - CKAN_MAX_UPLOAD_SIZE_MB=${CKAN_MAX_UPLOAD_SIZE_MB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
      - GA_ENABLED=false

    volumes:
      - ckan_config:/etc/ckan
      - pycsw_config:/etc/pycsw
      - ckan_storage:/var/lib/ckan

  ckan_gather_harvester:
     <<: *ckan_app
     container_name: ckan_gather_harvester
     command: ckan-paster --plugin=ckanext-harvest harvester gather_consumer -c /etc/ckan/production.ini
     ports: []
     depends_on:
       - ckan

  ckan_fetch_harvester:
     <<: *ckan_app
     container_name: ckan_fetch_harvester
     command: ckan-paster --plugin=ckanext-harvest harvester fetch_consumer -c /etc/ckan/production.ini
     ports: []
     depends_on:
       - ckan

  datapusher:
    container_name: datapusher
    image: clementmouchet/datapusher
    ports:
      - "8800:8800"

  pycsw:
    container_name: pycsw
    image: geopython/pycsw
    volumes:
      - pycsw_config:/etc/pycsw
    environment:
      - PYCSW_CONFIG=/etc/pycsw/pycsw.cfg
    ports:
      - "8000:8000"
    depends_on:
      - db

  db:
    container_name: db
    build:
      context: ../../
      dockerfile: contrib/docker/postgresql/Dockerfile
      args:
        - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    environment:
      - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data

  solr:
    container_name: solr
    build:
      context: ../../
      dockerfile: contrib/docker/solr/Dockerfile
    volumes:
      - solr_core_data:/opt/solr/server/solr/ckan

  redis:
    container_name: redis
    image: redis:latest
